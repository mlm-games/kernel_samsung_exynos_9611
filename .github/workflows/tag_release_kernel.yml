name: Build and Release Kernel Zips

on:
  # push:
  #   tags:
  #     - 'v*' # triggers on any tag starting with 'v'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name'
        required: true
        default: 'v348-r1'
      upload_releases:
        description: 'Upload releases'
        required: true
        default: 'true'
        type: boolean
      mark_prerelease:
        description: 'Mark as prerelease'
        required: true
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        device: [a51, m30s, m21, m31, m31s, f41]
        variant: [aosp, oneui]
    name: "Build ${{ matrix.variant }} for ${{ matrix.device }}"
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - name: apt update
        run: |
          sudo apt -y update
          sudo apt -y install bison flex libssl-dev python3 python-is-python3
          
      - name: Download clang
        run: |
          wget https://github.com/XSans0/WeebX-Clang/releases/download/WeebX-Clang-19.1.0-rc4-release/WeebX-Clang-19.1.0-rc4.tar.gz -O "weebx-clang.tar.gz"
          rm -rf toolchain && mkdir toolchain && tar -xvf weebx-clang.tar.gz -C toolchain && rm -rf weebx-clang.tar.gz
          
      - name: Run build
        run: |
          git submodule update --remote --init
          cd KernelSU && git checkout v0.9.5 && cd ..
          python build_kernel.py --${{ matrix.variant }} --target=${{ matrix.device }}

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        if: inputs.upload_releases == 'true'
        with:
          files: |
            *ernel*.zip
          name: Grassy Kernel Flashable zips // ${{ inputs.tag_name }}
          tag_name: ${{ inputs.tag_name }}
          body: |
            Flash using a custom recovery or Kernel Flasher from Fdroid (Gplay apps are not trustworthy for flashing)
            Open an issue with the rom and device used when it doesn't boot and you're sure it's due to the kernel.
            All are KSU zips.
            
            AOSP and OneUI variants are provided for each device.
          prerelease: ${{ inputs.mark_prerelease }}
