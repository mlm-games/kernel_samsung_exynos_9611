name: Build and Release Kernel

on:
  push:
    tags:
      - 'v*' # triggers on any tag starting with 'v'
      workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - device: a51
          - device: m30s
          - device: m21
          - device: m31
          - device: m31s
          - device: f41
    name: "Build for ${{matrix.device}}"
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - name: apt update
        run: |
          sudo apt -y update
          sudo apt -y install -y bison flex libssl-dev python3 python-is-python3
          
      - name: Download clang
        run: |
          wget https://github.com/XSans0/WeebX-Clang/releases/download/WeebX-Clang-19.1.0-rc4-release/WeebX-Clang-19.1.0-rc4.tar.gz -O "weebx-clang.tar.gz"
          rm -rf toolchain && mkdir toolchain && tar -xvf weebx-clang.tar.gz -C toolchain && rm -rf weebx-clang.tar.gz
          
      - name: Run build
        run: |
          git submodule update --remote --init
          python build_kernel.py --aosp --target=${{matrix.device}} --allow-dirty


    - name: Upload to Release        # Github artifact action eats your space even if you delete the artifacts :\ (the K is missing in files as it could change case in future)
      uses: softprops/action-gh-release@v2
      if: success()
      with:
        files: |
          *ernel*.zip
        name: Grass Kernel ${{ matrix.variant }} for ${{ matrix.device }} // ${{ github.ref_name }}
        tag_name: ${{ github.ref }}
        body: |
          Flash using a custom recovery or Kernel Flasher from Fdroid (Gplay apps are not trustworthy for flashing hence not recommended)
          Open an issue with the rom and device used when it doesn't boot and you're sure it's due to the kernel.
          All are KSU zips, and dirty flashable
          
          AOSP and OneUI variants are provided for each device.